# This workflow installs the latest version of Terraform CLI and configures the Terraform CLI configuration file
# with an API token for Terraform Cloud (app.terraform.io). On pull request events, this workflow will run
# `terraform init`, `terraform fmt`, and `terraform plan` (speculative plan via Terraform Cloud). On push events
# to the "main" branch, `terraform apply` will be executed.
#
# Documentation for `hashicorp/setup-terraform` is located here: https://github.com/hashicorp/setup-terraform
#
# To use this workflow, you will need to complete the following setup steps.
#
# 1. Create a `main.tf` file in the root of this repository with the `remote` backend and one or more resources defined.
#   Example `main.tf`:
#     # The configuration for the `remote` backend.
#     terraform {
#       backend "remote" {
#         # The name of your Terraform Cloud organization.
#         organization = "example-organization"
#
#         # The name of the Terraform Cloud workspace to store Terraform state files in.
#         workspaces {
#           name = "example-workspace"
#         }
#       }
#     }
#
#     # An example resource that does nothing.
#     resource "null_resource" "example" {
#       triggers = {
#         value = "A example resource that does nothing!"
#       }
#     }
#
#
# 2. Generate a Terraform Cloud user API token and store it as a GitHub secret (e.g. TF_API_TOKEN) on this repository.
#   Documentation:
#     - https://www.terraform.io/docs/cloud/users-teams-organizations/api-tokens.html
#     - https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
#
# 3. Reference the GitHub secret in step using the `hashicorp/setup-terraform` GitHub Action.
#   Example:
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1
#       with:
#         cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

name: 'Terraform CI/CD Workflow'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  # Job for dev environment
  terraform-dev:
    name: 'Terraform - Dev Environment'
    runs-on: ubuntu-latest
    environment: dev # Matches the "dev" environment in GitHub

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.5

      # Install Checkov
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov
          checkov --version

      # Run Checkov
      - name: Run Checkov for Security Scanning
        run: checkov -d . || true

      # Install TFLint
      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      # Run TFLint
      - name: Run TFLint for Code Linting
        run: tflint || true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan.binary -var="environment=dev"

      # Terraform Show to JSON
      - name: Terraform Show
        run: terraform show -json tfplan.binary > plan.json

      # Install Infracost
      - name: Install Infracost
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          infracost --version

      # Configure Infracost API key
      - name: Configure Infracost API key
        run: infracost configure set api_key ${{ secrets.INFRACOST_API_KEY }}

      # Run Infracost
      - name: Run Infracost for Cost Estimation
        run: |
          infracost breakdown --path=plan.json \
          --format=json --out-file=infracost-report.json

      # Post Infracost Comment (for pull requests)
      - name: Post Infracost Comment
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          infracost comment github --path=infracost-report.json \
          --repo=$GITHUB_REPOSITORY \
          --pull-request=$GITHUB_REF_NAME \
          --github-token=${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var="environment=dev"

  # Job for qa environment
  terraform-qa:
    name: 'Terraform - QA Environment'
    runs-on: ubuntu-latest
    environment: qa # Matches the "qa" environment in GitHub

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.5

      # Install Checkov
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov
          checkov --version

      # Run Checkov
      - name: Run Checkov for Security Scanning
        run: checkov -d . || true

      # Install TFLint
      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      # Run TFLint
      - name: Run TFLint for Code Linting
        run: tflint || true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan.binary -var="environment=qa"

      # Terraform Show to JSON
      - name: Terraform Show
        run: terraform show -json tfplan.binary > plan.json

      # Install Infracost
      - name: Install Infracost
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          infracost --version

      # Configure Infracost API key
      - name: Configure Infracost API key
        run: infracost configure set api_key ${{ secrets.INFRACOST_API_KEY }}

      # Run Infracost
      - name: Run Infracost for Cost Estimation
        run: |
          infracost breakdown --path=plan.json \
          --format=json --out-file=infracost-report.json

      # Post Infracost Comment (for pull requests)
      - name: Post Infracost Comment
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          infracost comment github --path=infracost-report.json \
          --repo=$GITHUB_REPOSITORY \
          --pull-request=$GITHUB_REF_NAME \
          --github-token=${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var="environment=qa"

  # Job for prod environment
  terraform-prod:
    name: 'Terraform - Prod Environment'
    runs-on: ubuntu-latest
    environment: prod # Matches the "prod" environment in GitHub

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.5.5

      # Install Checkov
      - name: Install Checkov
        run: |
          python -m pip install --upgrade pip
          pip install checkov
          checkov --version

      # Run Checkov
      - name: Run Checkov for Security Scanning
        run: checkov -d . || true

      # Install TFLint
      - name: Install TFLint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          tflint --version

      # Run TFLint
      - name: Run TFLint for Code Linting
        run: tflint || true

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan.binary -var="environment=prod"

      # Terraform Show to JSON
      - name: Terraform Show
        run: terraform show -json tfplan.binary > plan.json

      # Install Infracost
      - name: Install Infracost
        run: |
          curl -fsSL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
          infracost --version

      # Configure Infracost API key
      - name: Configure Infracost API key
        run: infracost configure set api_key ${{ secrets.INFRACOST_API_KEY }}

      # Run Infracost
      - name: Run Infracost for Cost Estimation
        run: |
          infracost breakdown --path=plan.json \
          --format=json --out-file=infracost-report.json

      # Post Infracost Comment (for pull requests)
      - name: Post Infracost Comment
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          infracost comment github --path=infracost-report.json \
          --repo=$GITHUB_REPOSITORY \
          --pull-request=$GITHUB_REF_NAME \
          --github-token=${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -var="environment=prod"
